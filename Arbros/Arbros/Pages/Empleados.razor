@page "/empleados"
@using Syncfusion.Blazor.Grids
@using System.Collections.Generic

<SfGrid DataSource="@employees" AllowPaging="true" AllowSorting="true" Width="100%">
    <GridColumns>
        <GridColumn Field="@nameof(Employee.Id)" HeaderText="ID" Width="100" IsPrimaryKey="true" TextAlign="TextAlign.Right"></GridColumn>
        <GridColumn Field="@nameof(Employee.Name)" HeaderText="Nombre" Width="150"></GridColumn>
        <GridColumn Field="@nameof(Employee.Position)" HeaderText="Posición" Width="150"></GridColumn>
        <GridColumn Field="@nameof(Employee.Age)" HeaderText="Edad" Width="100"></GridColumn>
        <GridColumn HeaderText="Acciones" Width="150">
            <Template>
                @{
                    var employee = (Employee)context;
                }
                <button @onclick="() => EditEmployee(employee)">Editar</button>
                <button @onclick="() => DeleteEmployee(employee)">Eliminar</button>

            </Template>
        </GridColumn>
    </GridColumns>
</SfGrid>

<SfDialog @bind-Visible="@isDialogVisible" Width="400px" Header="Empleado">
    <div>
        <EditForm Model="@currentEmployee" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <InputText @bind-Value="@currentEmployee.Name" placeholder="Nombre" />
            <InputText @bind-Value="@currentEmployee.Position" placeholder="Posición" />
            <InputNumber @bind-Value="@currentEmployee.Age" placeholder="Edad" />
            <button type="submit" @onclick="guardar">Guardar</button>
        </EditForm>
    </div>
</SfDialog>

@code {
    private List<Employee> employees = new List<Employee>();
    private Employee currentEmployee = new Employee();
    private bool isDialogVisible = false;

    protected override void OnInitialized()
    {
        employees = new List<Employee>
        {
            new Employee { Id = 1, Name = "Juan", Position = "Desarrollador", Age = 30 },
            new Employee { Id = 2, Name = "Ana", Position = "Diseñadora", Age = 28 }
        };
    }

    private void EditEmployee(Employee employee)
    {
        currentEmployee = employee;
        isDialogVisible = true;
    }

    private void DeleteEmployee(Employee employee)
    {
        employees.Remove(employee);
        StateHasChanged();
    }

    private void HandleValidSubmit()
    {
        if (currentEmployee.Id == 0)
        {
            currentEmployee.Id = employees.Count + 1; // Simulación de ID
            employees.Add(currentEmployee);
        }
        isDialogVisible = false;
        currentEmployee = new Employee();
    }

    public class Employee
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Position { get; set; } = string.Empty;
        public int Age { get; set; }
    }
    public void guardar()
    {
    
    }
}
